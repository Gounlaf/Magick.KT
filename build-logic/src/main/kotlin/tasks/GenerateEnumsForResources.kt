package tasks

import com.anyascii.AnyAscii
import com.squareup.kotlinpoet.FileSpec
import com.squareup.kotlinpoet.FunSpec
import com.squareup.kotlinpoet.PropertySpec
import com.squareup.kotlinpoet.TypeSpec
import org.gradle.api.DefaultTask
import org.gradle.api.Project
import org.gradle.api.tasks.TaskAction
import org.gradle.kotlin.dsl.support.uppercaseFirstChar
import java.io.File
import javax.inject.Inject

abstract class GenerateEnumsForResources @Inject constructor(
    sourceProject: Project,
    private val source: File,
    private val packageName: String,
    private val fileName: String,
) : DefaultTask() {
    private val rootDir: File = sourceProject.projectDir

    private fun File.sanitizeName() = AnyAscii.transliterate(nameWithoutExtension.plus(extension.uppercase())
        .filterNot { c: Char -> c == ' ' }
        .filterNot { c: Char -> c == '-' }
        .replace('.', '_')
        .uppercaseFirstChar())

    private fun recursiveBuild(dir: File): TypeSpec.Builder {
        val builder = TypeSpec.enumBuilder(dir.sanitizeName())
            .primaryConstructor(
                FunSpec.constructorBuilder()
                    .addParameter("path", String::class)
                    .build()
            )

        dir.walkTopDown()
            .maxDepth(1)
            .filterNot { it == dir }
            .sorted()
            .forEach {
                if (it.isDirectory) {
                    builder.addType(recursiveBuild(it).build())
                } else {
                    builder.addEnumConstant(
                        it.sanitizeName(),
                        TypeSpec.anonymousClassBuilder()
                            .addSuperclassConstructorParameter("%S", it.relativeTo(rootDir))
                            .build()
                    )
                }
            }

        builder.addProperty(
            PropertySpec.builder("path", String::class)
                .initializer("path")
                .build()
        )

        return builder
    }


    @TaskAction
    fun createEnums() {
        FileSpec.builder(packageName, fileName)
            .addFileComment("Autogenerated file; do not edit")
            .addType(
                recursiveBuild(rootDir.resolve(source.resolve("resources")))
                    .build()
            )
            .build()
            .writeTo(rootDir.resolve(source.resolve("kotlin")))
    }
}
